// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.2.1
// Schema file: DeviceConfiguration.xsd
// Creation Date: 2006-06-06 20:56:04
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections.Generic;
using System.Xml.Schema;
using System.ComponentModel;

namespace Notpod.Configuration12
{
    [XmlRoot]
    public class DeviceConfiguration
    {
        public DeviceConfiguration()
        {
            SyncPatterns = new List<SyncPattern>();
            Devices = new List<Device>();
        }

        /// <summary>
        /// Accessor for devices.
        /// </summary>
        [XmlArray("Devices")]
        [XmlArrayItem("Device")]
        public List<Device> Devices { get; set; }
        
        [XmlIgnore]
        public List<SyncPattern> SyncPatterns { get; set; }
        
        /// <summary>
        /// Add a device.
        /// </summary>
        /// <param name="d">Device to add.</param>
        public void AddDevice(Device d)
        {
            Devices.Add(d);
        }

        /// <summary>
        /// Remove a Device.
        /// </summary>
        /// <param name="d">Device to remove.</param>
        /// <returns></returns>
        public bool RemoveDevice(Device d)
        {
            return Devices.Remove(d);
        }
        
        public bool ContainsSyncPattern(SyncPattern sp) 
        {
            foreach(SyncPattern existingPattern in SyncPatterns) {
                if (existingPattern.Identifier == sp.Identifier) {
                    return true;
                }
            }
            return false;
        }

    }

}
